[{"D:\\data-science\\Project\\Beetgram\\Beetgram_front\\src\\index.js":"1","D:\\data-science\\Project\\Beetgram\\Beetgram_front\\src\\components\\App.js":"2","D:\\data-science\\Project\\Beetgram\\Beetgram_front\\src\\components\\GlobalStyles.js":"3","D:\\data-science\\Project\\Beetgram\\Beetgram_front\\src\\components\\Router.js":"4","D:\\data-science\\Project\\Beetgram\\Beetgram_front\\src\\components\\Header.js":"5","D:\\data-science\\Project\\Beetgram\\Beetgram_front\\src\\routes\\Home\\index.js":"6","D:\\data-science\\Project\\Beetgram\\Beetgram_front\\src\\routes\\Home\\HomeContainer.js":"7","D:\\data-science\\Project\\Beetgram\\Beetgram_front\\src\\routes\\Home\\HomePresenter.js":"8","D:\\data-science\\Project\\Beetgram\\Beetgram_front\\src\\api.js":"9","D:\\data-science\\Project\\Beetgram\\Beetgram_front\\src\\components\\Loader.js":"10","D:\\data-science\\Project\\Beetgram\\Beetgram_front\\src\\components\\Section.js":"11","D:\\data-science\\Project\\Beetgram\\Beetgram_front\\src\\components\\Picture.js":"12","D:\\data-science\\Project\\Beetgram\\Beetgram_front\\src\\routes\\Public\\index.js":"13","D:\\data-science\\Project\\Beetgram\\Beetgram_front\\src\\routes\\Public\\PublicContainer.js":"14","D:\\data-science\\Project\\Beetgram\\Beetgram_front\\src\\routes\\Public\\PublicPresenter.js":"15","D:\\data-science\\Project\\Beetgram\\Beetgram_front\\src\\components\\Login.js":"16","D:\\data-science\\Project\\Beetgram\\Beetgram_front\\src\\routes\\Like\\index.js":"17","D:\\data-science\\Project\\Beetgram\\Beetgram_front\\src\\routes\\Like\\LikeContainer.js":"18","D:\\data-science\\Project\\Beetgram\\Beetgram_front\\src\\routes\\Like\\LikePresenter.js":"19","D:\\data-science\\Project\\Beetgram\\Beetgram_front\\src\\components\\Tag.js":"20"},{"size":390,"mtime":1611559376769,"results":"21","hashOfConfig":"22"},{"size":1324,"mtime":1611909877095,"results":"23","hashOfConfig":"22"},{"size":585,"mtime":1609311051211,"results":"24","hashOfConfig":"22"},{"size":1196,"mtime":1611636359234,"results":"25","hashOfConfig":"22"},{"size":3474,"mtime":1611905800469,"results":"26","hashOfConfig":"22"},{"size":79,"mtime":1611558883493,"results":"27","hashOfConfig":"22"},{"size":988,"mtime":1611909257254,"results":"28","hashOfConfig":"22"},{"size":2240,"mtime":1611905294170,"results":"29","hashOfConfig":"22"},{"size":2623,"mtime":1611909178036,"results":"30","hashOfConfig":"22"},{"size":383,"mtime":1610336390053,"results":"31","hashOfConfig":"22"},{"size":1179,"mtime":1609923046382,"results":"32","hashOfConfig":"22"},{"size":3685,"mtime":1611558826006,"results":"33","hashOfConfig":"22"},{"size":85,"mtime":1610336572621,"results":"34","hashOfConfig":"22"},{"size":885,"mtime":1611894665583,"results":"35","hashOfConfig":"22"},{"size":1268,"mtime":1610590602814,"results":"36","hashOfConfig":"22"},{"size":1291,"mtime":1611737967713,"results":"37","hashOfConfig":"22"},{"size":79,"mtime":1610592261441,"results":"38","hashOfConfig":"22"},{"size":883,"mtime":1611896710976,"results":"39","hashOfConfig":"22"},{"size":1239,"mtime":1611896571223,"results":"40","hashOfConfig":"22"},{"size":684,"mtime":1611907152916,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"b2oh2r",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"44"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"44"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"44"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\data-science\\Project\\Beetgram\\Beetgram_front\\src\\index.js",[],["88","89"],"D:\\data-science\\Project\\Beetgram\\Beetgram_front\\src\\components\\App.js",[],"D:\\data-science\\Project\\Beetgram\\Beetgram_front\\src\\components\\GlobalStyles.js",[],"D:\\data-science\\Project\\Beetgram\\Beetgram_front\\src\\components\\Router.js",[],"D:\\data-science\\Project\\Beetgram\\Beetgram_front\\src\\components\\Header.js",[],"D:\\data-science\\Project\\Beetgram\\Beetgram_front\\src\\routes\\Home\\index.js",[],"D:\\data-science\\Project\\Beetgram\\Beetgram_front\\src\\routes\\Home\\HomeContainer.js",["90"],"import React, { useContext, useState, useEffect } from \"react\";\r\nimport HomePresenter from \"./HomePresenter\";\r\nimport { tagDispatch } from \"../../components/App\";\r\nimport { HomeApi } from \"../../api\";\r\n\r\n// Container의 역할 : Application에서 사용되어지는 기능(함수), 상태(state), 이벤트 등을\r\n// 구현 하고, Presenter에 전달\r\nconst HomeContainer = () => {\r\n  const [loading, setLoading] = useState(true);\r\n  const [data1, setData1] = useState();\r\n  const { dispatch, tags, Tagged } = useContext(tagDispatch);\r\n  console.log(Tagged);\r\n  console.log(tags);\r\n  useEffect(() => {\r\n    HomeApi(tags, dispatch, setData1, setLoading, Tagged);\r\n    return () => {\r\n      tags.length = 0;\r\n      Tagged.legth = 0;\r\n      console.log(tags);\r\n    };\r\n  }, [tags]);\r\n  try {\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <HomePresenter loading={loading} data1={data1}></HomePresenter>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HomeContainer;\r\n","D:\\data-science\\Project\\Beetgram\\Beetgram_front\\src\\routes\\Home\\HomePresenter.js",[],"D:\\data-science\\Project\\Beetgram\\Beetgram_front\\src\\api.js",[],"D:\\data-science\\Project\\Beetgram\\Beetgram_front\\src\\components\\Loader.js",[],"D:\\data-science\\Project\\Beetgram\\Beetgram_front\\src\\components\\Section.js",[],"D:\\data-science\\Project\\Beetgram\\Beetgram_front\\src\\components\\Picture.js",["91","92"],"import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Overlay from \"react-overlay-component\";\r\nimport { GiBeet } from \"react-icons/gi\";\r\nimport { DetailApi, likeApi } from \"../api\";\r\nconst Container = styled.div`\r\n  font-size: 12px;\r\n`;\r\n\r\nconst Image = styled.div`\r\n  content: url(\"${({ bgUrl }) => bgUrl}\");\r\n  height: auto;\r\n  width: 300px;\r\n  background-size: cover;\r\n  border-radius: 4px;\r\n  background-position: center center;\r\n  transition: opacity 0.1s linear;\r\n`;\r\n\r\nconst ImageContainer = styled.div`\r\n  margin-bottom: 5px;\r\n  position: relative;\r\n  &:hover {\r\n    ${Image} {\r\n      opacity: 0.5;\r\n    }\r\n  }\r\n`;\r\nconst ImageDetail = styled.img`\r\n  content: url(\"${({ bgUrl }) => bgUrl}\");\r\n  height: 100%;\r\n  width: 550px;\r\n  object-fit: cover;\r\n  border-radius: 4px;\r\n  background-position: center center;\r\n  transition: opacity 0.1s linear;\r\n`;\r\n\r\nconst DetailHeader = styled.div`\r\n  display: flex;\r\n  align-content: center;\r\n  margin-bottom: 5px;\r\n  justify-content: space-between;\r\n  padding-right: 25px;\r\n`;\r\n\r\nconst Thum = styled.img`\r\n  background-image: url(\"${({ bgUrl }) => bgUrl}\");\r\n\r\n  background-size: cover;\r\n  height: 60px;\r\n  width: 60px;\r\n  border-radius: 70%;\r\n\r\n  overflow: hidden;\r\n  object-fit: cover;\r\n`;\r\n\r\nconst List = styled.ul`\r\n  display: flex;\r\n`;\r\n\r\nconst Item = styled.li`\r\n  height: 50px;\r\n  font-size: 23px;\r\n  font-weight: bold;\r\n  color: black;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  text-align: center;\r\n  margin-left: 15px;\r\n  margin-right: 10px;\r\n`;\r\n\r\nconst Picture = ({ img_no, imageUrl, reg_date = false }) => {\r\n  const [isOpen, setOverlay] = useState(false);\r\n  const closeOverlay = () => setOverlay(false);\r\n  const [urlImg, setUrl] = useState();\r\n  const [imgUser, setUser] = useState();\r\n  const [like, setLike] = useState();\r\n  const [thumbUrl, setThumb] = useState();\r\n\r\n  //useCallback 사용\r\n  const onClickLike = (event) => {\r\n    if (like === 1) setLike(0);\r\n    else setLike(1);\r\n\r\n    const dataImgNo = event.target.parentNode.getAttribute(\"data-img-no\");\r\n    console.log(dataImgNo);\r\n    if (dataImgNo) likeApi(dataImgNo, like, setLike);\r\n  };\r\n\r\n  const DetailImg = (img_no) => {\r\n    DetailApi(img_no, setUrl, setUser, setLike, setThumb);\r\n  };\r\n\r\n  const configs = {\r\n    animate: false,\r\n    // clickDismiss: false,\r\n    // escapeDismiss: false,\r\n    // focusOutline: false,\r\n  };\r\n  return (\r\n    // <Link to={`/detail/${id}`}>\r\n    <Container\r\n      onClick={() => {\r\n        setOverlay(true);\r\n        DetailImg(img_no);\r\n      }}\r\n    >\r\n      <Overlay\r\n        style={{ maxWidth: \"800px\" }}\r\n        configs={configs}\r\n        isOpen={isOpen}\r\n        closeOverlay={closeOverlay}\r\n      >\r\n        <div>\r\n          <DetailHeader>\r\n            <div style={{ display: \"flex\" }}>\r\n              <Thum bgUrl={`${thumbUrl}`} />\r\n              <List>\r\n                <Item>{imgUser}</Item>\r\n                <Item>{reg_date.slice(0, 17)}</Item>\r\n              </List>\r\n            </div>\r\n            <GiBeet\r\n              onClick={onClickLike}\r\n              color={like ? \"#F04F53\" : \"black\"}\r\n              size=\"50px\"\r\n              data-img-no={img_no}\r\n            />\r\n          </DetailHeader>\r\n          <ImageDetail bgUrl={`${urlImg}`}></ImageDetail>\r\n        </div>\r\n      </Overlay>\r\n      <ImageContainer>\r\n        <Image bgUrl={imageUrl && `${imageUrl}`}></Image>\r\n      </ImageContainer>\r\n    </Container>\r\n    //  </Link>\r\n  );\r\n};\r\n\r\nPicture.propTypes = {\r\n  img_no: PropTypes.number.isRequired,\r\n  imageUrl: PropTypes.string,\r\n  reg_date: PropTypes.string,\r\n};\r\n\r\nexport default Picture;\r\n","D:\\data-science\\Project\\Beetgram\\Beetgram_front\\src\\routes\\Public\\index.js",[],"D:\\data-science\\Project\\Beetgram\\Beetgram_front\\src\\routes\\Public\\PublicContainer.js",["93"],"import React, { useContext, useState, useEffect } from \"react\";\r\nimport PublicPresenter from \"./PublicPresenter\";\r\nimport { tagDispatch } from \"../../components/App\";\r\nimport { PubApi } from \"../../api\";\r\n\r\n// Container의 역할 : Application에서 사용되어지는 기능(함수), 상태(state), 이벤트 등을\r\n// 구현 하고, Presenter에 전달\r\nconst PublicContainer = () => {\r\n  const [loading, setLoading] = useState(true);\r\n  const [data1, setData1] = useState();\r\n  const { dispatch, tags } = useContext(tagDispatch);\r\n  useEffect(() => {\r\n    PubApi(tags, dispatch, setData1, setLoading);\r\n    return () => {\r\n      tags.length = 0;\r\n    };\r\n  }, [tags]);\r\n  try {\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <PublicPresenter loading={loading} data1={data1}></PublicPresenter>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PublicContainer;\r\n","D:\\data-science\\Project\\Beetgram\\Beetgram_front\\src\\routes\\Public\\PublicPresenter.js",[],"D:\\data-science\\Project\\Beetgram\\Beetgram_front\\src\\components\\Login.js",["94"],"import React, { useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { LoginApi } from \"../api\";\r\nimport axios from \"axios\";\r\n\r\nconst Login = () => {\r\n  const [userId, setUserId] = useState(\"\");\r\n  const [userPw, setUserPw] = useState(\"\");\r\n  const history = useHistory();\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (!userId || !userPw) {\r\n      return alert(\"아이디와 비밀번호를 입력해주세요.\");\r\n    }\r\n    try {\r\n      const data = {\r\n        user_id: userId,\r\n        user_pw: userPw,\r\n      };\r\n      LoginApi(data, history);\r\n    } catch (err) {\r\n      alert(\"로그인에 실패했습니다.\");\r\n      setUserId(\"\");\r\n      setUserPw(\"\");\r\n      console.error(\"login error\", err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Login</h2>\r\n      <input\r\n        type=\"text\"\r\n        name=\"user_id\"\r\n        value={userId}\r\n        onChange={(e) => setUserId(e.target.value)}\r\n        placeholder=\"id\"\r\n      />\r\n      <input\r\n        type=\"password\"\r\n        name=\"user_pw\"\r\n        value={userPw}\r\n        onChange={(e) => setUserPw(e.target.value)}\r\n        placeholder=\"pw\"\r\n      />\r\n      <button onClick={handleSubmit}>Login</button>\r\n      <Link to=\"/join\">회원가입</Link>\r\n    </div>\r\n  );\r\n};\r\nexport default Login;\r\n","D:\\data-science\\Project\\Beetgram\\Beetgram_front\\src\\routes\\Like\\index.js",[],"D:\\data-science\\Project\\Beetgram\\Beetgram_front\\src\\routes\\Like\\LikeContainer.js",["95"],"import React, { useContext, useState, useEffect } from \"react\";\r\nimport LikePresenter from \"./LikePresenter\";\r\nimport { tagDispatch } from \"../../components/App\";\r\nimport { LikePageApi } from \"../../api\";\r\n\r\n// Container의 역할 : Application에서 사용되어지는 기능(함수), 상태(state), 이벤트 등을\r\n// 구현 하고, Presenter에 전달\r\nconst LikeContainer = () => {\r\n  const [loading, setLoading] = useState(true);\r\n  const [data1, setData1] = useState();\r\n  const { dispatch, tags } = useContext(tagDispatch);\r\n  useEffect(() => {\r\n    LikePageApi(tags, dispatch, setData1, setLoading);\r\n    return () => {\r\n      tags.length = 0;\r\n    };\r\n  }, [tags]);\r\n  try {\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <LikePresenter loading={loading} data1={data1}></LikePresenter>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LikeContainer;\r\n","D:\\data-science\\Project\\Beetgram\\Beetgram_front\\src\\routes\\Like\\LikePresenter.js",[],"D:\\data-science\\Project\\Beetgram\\Beetgram_front\\src\\components\\Tag.js",[],{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","severity":1,"message":"101","line":21,"column":6,"nodeType":"102","endLine":21,"endColumn":12,"suggestions":"103"},{"ruleId":"104","severity":1,"message":"105","line":5,"column":8,"nodeType":"106","messageId":"107","endLine":5,"endColumn":13},{"ruleId":"104","severity":1,"message":"108","line":6,"column":10,"nodeType":"106","messageId":"107","endLine":6,"endColumn":22},{"ruleId":"100","severity":1,"message":"109","line":17,"column":6,"nodeType":"102","endLine":17,"endColumn":12,"suggestions":"110"},{"ruleId":"104","severity":1,"message":"105","line":4,"column":8,"nodeType":"106","messageId":"107","endLine":4,"endColumn":13},{"ruleId":"100","severity":1,"message":"109","line":17,"column":6,"nodeType":"102","endLine":17,"endColumn":12,"suggestions":"111"},"no-native-reassign",["112"],"no-negated-in-lhs",["113"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'Tagged' and 'dispatch'. Either include them or remove the dependency array.","ArrayExpression",["114"],"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","'API_BASE_URL' is defined but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["115"],["116"],"no-global-assign","no-unsafe-negation",{"desc":"117","fix":"118"},{"desc":"119","fix":"120"},{"desc":"119","fix":"121"},"Update the dependencies array to be: [Tagged, dispatch, tags]",{"range":"122","text":"123"},"Update the dependencies array to be: [dispatch, tags]",{"range":"124","text":"125"},{"range":"126","text":"125"},[715,721],"[Tagged, dispatch, tags]",[606,612],"[dispatch, tags]",[610,616]]